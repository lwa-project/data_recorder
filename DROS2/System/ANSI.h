// ========================= DROSv2 License preamble===========================
// Software for DROSv2 is covered jointly under GPLv3 and Boost 1.0 licenses,
// to the extent required by included Boost sources and GPL sources, and to the
// more restrictive case pertaining thereunto, as defined herebelow. Beyond those
// requirements, any code not explicitly restricted by either of thowse two license
// models shall be deemed to be licensed under the GPLv3 license and subject to
// those restrictions.
//
// Copyright 2012, Virginia Tech, University of New Mexico, and Christopher Wolfe
//
// ========================= Boost License ====================================
// Boost Software License - Version 1.0 - August 17th, 2003
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
// =============================== GPL V3 ====================================
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

#ifndef ANSI_H_
#define ANSI_H_

#include "../Primitives/StdTypes.h"
#include "../Common/Utility.h"

enum Mode{basic=0, bold=1, underline=4,blink=5,inverted=7};
enum Color{red=0,black,green,yellow,blue,magenta,cyan,white};


class ANSI {
public:
	static string modeOf(Mode m){
		switch(m){
			case basic:	    return "0";
			case bold:	    return "1";
			case underline:	return "4";
			case blink:	    return "5";
			case inverted:	return "7";
			default:        return "0";
		}
	}
	static string fgOf(Color c){
		switch(c){
			case black:	    return "30";
			case red:	    return "31";
			case green:	    return "32";
			case yellow:    return "33";
			case blue:      return "34";
			case magenta:	return "35";
			case cyan:	    return "36";
			case white:	    return "37";
			default:        return "37";
		}
	}
	static string bgOf(Color c){
		switch(c){
			case black:	    return "40";
			case red:	    return "41";
			case green:	    return "42";
			case yellow:    return "43";
			case blue:      return "44";
			case magenta:	return "45";
			case cyan:	    return "46";
			case white:	    return "47";
			default:        return "47";
		}
	}

	static string colorSpec(Mode m, Color fg, Color bg=black){
		return "\033[" + modeOf(m) + ";" + fgOf(fg) +";" + bgOf(bg) +"m";
	}

	static string hl(string s, Mode m=bold, Color fg=green, Color bg=black, Mode m0=basic, Color fg0=white, Color bg0=black){
		return colorSpec(m,fg,bg) + s + colorSpec(m0,fg0,bg0);
	}

	static string strip(string s){
		string re_ansi = "\\033\\[(?:\\d*;)?(?:\\d*;)?\\d*m";
		return Utility::strip(s,re_ansi);
	}

private:
	ANSI();
	virtual ~ANSI();

};

#endif /* ANSI_H_ */
